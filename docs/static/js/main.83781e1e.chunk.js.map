{"version":3,"sources":["Components/AddCategories.jsx","helpers/GetGifs.jsx","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategories","categories","useState","search","setSearch","onSubmit","e","preventDefault","trim","length","cats","type","className","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","gif","useFetchGifs","key","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"+LAIaA,EAAgB,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,WAAkB,EAEnBC,mBAAS,IAFU,mBAExCC,EAFwC,KAEhCC,EAFgC,KAY/C,OACI,0BAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAOK,OAAOC,OAAS,IACxBR,GAAY,SAAAS,GAAI,OAAMP,GAAN,mBAAiBO,OACjCN,EAAU,OAMV,2BACAO,KAAK,OACLC,UAAU,SACVC,MAAOV,EACPW,SAAW,SAAAR,GAAC,OAAIF,EAAUE,EAAES,OAAOF,Y,uBCrBlCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaXM,GAbW,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACtC,OACI,yBAAKP,UAAU,8DACX,yBAAKqB,IAAMd,EAAMe,IAAKL,IACtB,2BAAIA,KCFHM,EAAU,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECAf,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAO,GACPY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPvB,EAASC,GACRuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGlB,CAAEnB,IAEEoB,EDd0BK,CAAczB,GAAhCQ,EAFwB,EAE/BD,KAAaY,EAFkB,EAElBA,QAErB,OACI,6BACI,wBAAIxB,UAAU,yDAAd,IAAyEK,EAAzE,KAGImB,EACI,wBAAIxB,UAAU,uDAAd,cAEA,yBAAKA,UAAU,cACTa,EAAKC,KAAK,SAAAe,GAAG,OACX,kBAAC,EAAD,eAAaE,IAAMF,EAAIb,IAAUa,UEa9CG,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,CAAE,mBAFxB,mBAEhBD,EAFgB,KAEJ4C,EAFI,KAIvB,OACI,oCACI,8CACI,kBAAC,EAAD,CAAe5C,WAAa4C,IAChC,6BAEA,4BAEQ5C,EAAWyB,KAAK,SAAAzB,GAAU,OACtB,kBAAC,EAAD,CACI0C,IAAO1C,EACPgB,SAAahB,U,MChBzC6C,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.83781e1e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategories = ( { categories } ) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( search.trim().length > 2 ) {\r\n            categories( cats => [ search, ...cats ] )\r\n            setSearch(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n            type=\"text\" \r\n            className=\"Search\" \r\n            value={search}\r\n            onChange={ e => setSearch(e.target.value)} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    categories: PropTypes.func.isRequired,\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=IeiWfIZ5q163DzyQdI8D5JILmIqh4CjY`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return( gifs );\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn animate__delay-2s\">\r\n            <img src={ url } alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data : gifs, loading } = useFetchGifs( category )\r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"animate__animated animate__bounceIn animate__delay-2s\"> { category } </h1>\r\n\r\n            { \r\n                loading ? \r\n                    <h4 className=\"animate__animated animate__bounce animate__repeat-2\">Loading...</h4> \r\n                :\r\n                    <div className=\"card__gird\">\r\n                        { gifs.map( gif => (\r\n                            <GifGridItem key={ gif.id } { ...gif } />\r\n                        )) }\r\n                    </div>\r\n                \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( gif => {\r\n            setstate({\r\n                data: gif,\r\n                loading: false\r\n            });\r\n        } )\r\n    }, [ category ] )\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport {AddCategories} from './Components/AddCategories'\r\nimport {GifGrid} from './Components/GifGrid'\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([ 'Rick And Morty' ])\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n                <AddCategories categories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( categories => (\r\n                        <GifGrid \r\n                            key= { categories }\r\n                            category = { categories }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}